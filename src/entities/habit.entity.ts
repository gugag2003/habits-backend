import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';
import { User } from './user.entity';

/**
 * Represents a habit tracked by a user. Each habit belongs to a single
 * user and stores a name, completion history and the timestamp when it
 * was created. The completion history is stored as an array of dates
 * in ISO format using a simple array column.
 */
@Entity()
export class Habit {
  /**
   * A UUID automatically generated by the database. The primary key
   * uniquely identifies each habit.
   */
  @PrimaryGeneratedColumn('uuid')
  id: string;

  /**
   * The display name of the habit.
   */
  @Column()
  name: string;

  /**
   * A list of dates when the habit was completed. We store this as a JSON
   * array (simple-json) so that dates containing commas (e.g. "Sun, 1 Sep, 2024")
   * are preserved correctly. Using simple-array would split on commas and
   * corrupt the data.
   */
  @Column('simple-json', { nullable: false, default: '[]' })
  completed: string[];

  /**
   * Epoch timestamp (in milliseconds) when the habit was created.
   */
  @Column({ type: 'integer' })
  created: number;

  /**
   * The user that owns this habit.
   */
  @ManyToOne(() => User, (user) => user.habits)
  user: User;
}